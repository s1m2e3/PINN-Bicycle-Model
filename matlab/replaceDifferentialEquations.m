function [xDot yDot thetaDot deltaDot lambdaXDot lambdaYDot lambdaThetaDot lambdaDeltaDot ] = replaceDifferentialEquations(xDot yDot thetaDot deltaDot lambdaXDot lambdaYDot lambdaThetaDot lambdaDeltaDot predTheta predDelta predLambdaX predLambdaY predTheta predLambdaDelta)
%% Replace differential equations by free function components
xDot = subs(xDot,{theta delta lambdaX lambdaY lambdaTheta lambdaDelta},{predTheta predDelta predLambdaX predLambdaY ...
    predTheta predLambdaDelta});
yDot = subs(yDot,{theta delta lambdaX lambdaY lambdaTheta lambdaDelta},{predTheta predDelta predLambdaX predLambdaY ...
    predTheta predLambdaDelta});
thetaDot = subs(thetaDot,{theta delta lambdaX lambdaY lambdaTheta lambdaDelta},{predTheta predDelta predLambdaX predLambdaY ...
    predTheta predLambdaDelta});
deltaDot = subs(deltaDot,{theta delta lambdaX lambdaY lambdaTheta lambdaDelta},{predTheta predDelta predLambdaX predLambdaY ...
    predTheta predLambdaDelta});
lambdaXDot= subs(lambdaXDot,{theta delta lambdaX lambdaY lambdaTheta lambdaDelta},{predTheta predDelta predLambdaX predLambdaY ...
    predTheta predLambdaDelta});
lambdaYDot = subs(lambdaYDot,{theta delta lambdaX lambdaY lambdaTheta lambdaDelta},{predTheta predDelta predLambdaX predLambdaY ...
    predTheta predLambdaDelta});
lambdaThetaDot = subs(lambdaThetaDot,{theta delta lambdaX lambdaY lambdaTheta lambdaDelta},{predTheta predDelta predLambdaX predLambdaY ...
    predTheta predLambdaDelta});
lambdaDeltaDot = subs(lambdaDeltaDot,{theta delta lambdaX lambdaY lambdaTheta lambdaDelta},{predTheta predDelta predLambdaX predLambdaY ...
    predTheta predLambdaDelta});
end